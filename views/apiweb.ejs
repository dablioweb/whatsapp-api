<!DOCTYPE html>
<html>
<head>
	<title>Whatsapp API</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" href="https://static.whatsapp.net/rsrc.php/v3/yP/r/rYZqPCBaG70.png" type="image/x-icon" />
  <!-- This parts is optional, just for improve the styles -->
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap" rel="stylesheet">
	<style>
          #logout-button {
        position: fixed;
        top: 10px;
        right: 10px;
      }
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: 'Montserrat', sans-serif;
      padding: 20px;
    }
    .form-container {
      margin: 15px 0;
      max-width: 500px;
	  border-radius: 10px;
	  padding: 20px;
	  color: white;
	  background-color: #666;
    }
    .form-container input,
    .form-container textarea {
      width: 100%;
      border: 1px solid #ccc;
      border-radius: 10px;
      padding: 10px 8px;
      font-family: inherit;
    }
	.form-container input#webhook,
	.form-container input.client-webhook{
		margin-bottom: 10px;
	}
    .add-client-btn {
      padding: 6px 15px;
      margin-top: 10px;
      background: green;
      color: white;
      border: 1px solid rgb(0, 93, 0);
      border-radius: 2px;
    }
    .client-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      grid-gap: 15px;
      margin-top: 30px;
    }
    .client {
      border: 1px solid #ccc;
      border-radius: 4px;
      padding: 15px;
    }
    #qrcode {
      display: none; /* Showed when qr code received */
      width: 100%;
      margin: 10px 0;
      border: 1px solid #efefef;
      border-radius: 4px;
    }
    ul.logs {
      max-height: 150px;
      padding: 15px 15px 15px 30px;
      margin-top: 5px;
      border-radius: 4px;
      overflow-y: auto;
      background: #efefef;
      color: #666;
      font-size: 14px;
    }
    ul.logs li:first-child {
      color: green;
    }
    .hide {
      display: none;
    }
	.client-container .hide .webhook{
		width: auto;
	}
	</style>
</head>
<body>
  <button id="logout-button">Logout</button>
	<div id="app">
		<h1>Whatsapp API</h1>
		<p>by <a href="https://ferramentas.marketing">Ferramentas.Marketing</a></p>
		<div class="form-container">
			<label for="client-webhook">WebHook</label><br>
			<input type="text" id="webhook" placeholder="Digite a url do webhook">
			<label for="client-id">ID</label><br>
			<input type="text" id="client-id" placeholder="ID do numero">
			<br><br>
			<label for="client-description">Descrição</label><br>
			<textarea rows="3" id="client-description" placeholder="Descreva aqui..."></textarea>
			<br>
			<button class="add-client-btn">Criar sessão</button>
		</div>
		<div class="client-container">
			<div class="client hide">
				<h3 class="title"></h3>
				<p class="description"></p>
				<p class="webhook"></p>
				<img src="" alt="QR Code" id="qrcode">
				<h3>Logs:</h3>
				<ul class="logs"></ul>
			</div>
		</div>
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>
	<script>
		$(document).ready(function() {

			var socket = io();

			// Ketika button tambah diklik
			$('.add-client-btn').click(function() {
				var clientId = $('#client-id').val();
				var clientDescription = $('#client-description').val();
				var clientWebhook = $('#webhook').val();

				/**
				* Some peoples want to use the phone number as the ID
				* But because we use the ID as the html class attribute value: class="<The ID>"
				* It won't work. Read more on https://www.w3.org/TR/REC-html40/types.html#type-cdata
				*
				* So, here we add the prefix to solve that problem
				* Each ID will automatically added a 'client-' prefix for the class attribute
				*/

  $.ajax({
  url: '/get-podecriar',
  type: 'GET',
  cache: false, // add this line to disable caching
  success: function (data) {
    console.log(data);
    podecriar = data;
    console.log(podecriar);
				var clientClass = 'client-' + clientId;
				var template = $('.client').first().clone()
										   .removeClass('hide')
										   .addClass(clientClass);

				template.find('.title').html(clientId);
				template.find('.description').html(clientDescription);
				template.find('.webhook').html(clientWebhook);
				template.find('.logs').append($('<li>').text('Conectando...'));
				$('.client-container').append(template);


				socket.emit('create-session', {
					id: clientId,
					webhook: clientWebhook,
					description: clientDescription
				});
      }
    });
      });
			socket.on('init', function(data) {
  $('.client-container .client').not(':first').remove();
  for (var i = 0; i < data.length; i++) {
      var session = data[i];
      var clientId = session.id;
      var clientWebhook = session.webhook;
      var clientDescription = session.description;
      var clientEmail = session.email;
      var clientClass = 'client-' + clientId;
      var template = $('.client').first().clone()
                                 .removeClass('hide')
                                 .addClass(clientClass);
      template.find('.title').html(clientId);
      template.find('.webhook').html(clientWebhook);
      template.find('.description').html(clientDescription);
      var valoremail = '<%= valoremail %>';
      if(session.email == valoremail){
      $('.client-container').append(template);
      }
      if (session.ready) {
        $(`.client.${clientClass} .logs`).prepend($('<li>').text('Whatsapp conectado!'));
      } else {
        $(`.client.${clientClass} .logs`).prepend($('<li>').text('Conectando...'));
      }
    }
  }
);

			socket.on('remove-session', function(id) {
				$(`.client.client-${id}`).remove();
			});

			socket.on('message', function(data) {
				$(`.client.client-${data.id} .logs`).prepend($('<li>').text(data.text));
			});

			socket.on('qr', function(data) {
				$(`.client.client-${data.id} #qrcode`).attr('src', data.src);
				$(`.client.client-${data.id} #qrcode`).show();
			});

			socket.on('ready', function(data) {
				$(`.client.client-${data.id} #qrcode`).hide();
			});

			socket.on('authenticated', function(data) {
				$(`.client.client-${data.id} #qrcode`).hide();
			});
		});

    const logoutButton = document.getElementById('logout-button');

logoutButton.addEventListener('click', () => {
  // Send HTTP request to /logout
  fetch('/logout', {
    method: 'GET',
    credentials: 'same-origin'
  }).then(response => {
    // Redirect to the login page after logout
    if (response.ok) {
      window.location.href = '/login';
    }
  }).catch(error => {
    console.error('Logout failed:', error);
  });
});

	</script>
</html>
